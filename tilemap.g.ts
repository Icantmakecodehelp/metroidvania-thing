// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile15 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile17 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile18 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile19 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile20 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile21 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile22 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile23 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile24 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile25 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile26 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile28 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile27 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile29 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile30 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile31 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile32 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile33 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile34 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile35 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile36 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile37 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile38 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile39 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile40 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile41 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level_0":
            case "level1":return tiles.createTilemap(hex`0a000a0001010101010101010103010101010101010101030101010101010101010301000001010000010103010000010100000101030101010101010101010302020202020202020202020202020202020202020202020202020202020202020202020202020202`, img`
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. 2 . . . . . . . . 
2 2 . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile7,myTiles.tile9,myTiles.tile3], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "Sub level 2":
            case "level2":return tiles.createTilemap(hex`14000a00000000000000000000000000000000000000000000000000000000000000000000030000000000000800000000000000000004050000000000000000070900000000000000000000000000040202020502050000000003000300000000000c0000000000000000000000000000000000000000000000000000000402050000000000000000000c00000000000000000000000000000000000000000000000000010000000000000b0000000000000a00000000000606060606060606060606060606060606060606`, img`
. . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 . . . . . . 
. . . . . . . . . . 2 2 . . . . . . . . 
. . . . . . . . . . . . . . . 2 2 2 2 2 
2 2 . . . . 2 . 2 . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
. . 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.coral0,sprites.builtin.oceanSand2,sprites.builtin.oceanSand0,sprites.builtin.oceanSand1,sprites.builtin.oceanSand3,sprites.builtin.oceanSand8,sprites.builtin.forestTiles11,sprites.builtin.forestTiles7,sprites.builtin.coral5,myTiles.tile14,myTiles.tile17,myTiles.tile16], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level11":
            case "level11":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level12":
            case "level12":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level13":
            case "level13":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "Level_4 aka boss fight":
            case "level3":return tiles.createTilemap(hex`19000f00000000000000000000000000130000000000000000000000000000000000000000000000041204000000000000000000000000000000000000000000071111080900000000000000000000000000000000000000000000000000000000000000000000001108080808090000000000000000040000000000000000000000000000000000000000000000070b0b090f0000000a0000000000000000000000001000000000000000000000000200000000000400000d00000000000000000000000000000002000000000007080808090000000000000000000000000000020f00000000000000000000000000000000000000000a000003000000000000000000000000000000000000000000020000000000000000000a000000000000000000000000000e030000000000000000000200000000000000000000000000000000000000000004000d020000000000000000000000001400000000000000010505050505050605050c0c0c0c0c0506060606050505050505`, img`
.........................
.........................
..........22222..........
.........................
222222...................
.............2222....2...
.........2...........2...
.....................2...
..22222..............2...
..................2..2...
..................2......
...2..............2......
...2.....................
...2.....................
2222222222222222222222222
`, [myTiles.transparency16,sprites.swamp.swampTile0,myTiles.tile6,myTiles.tile8,myTiles.tile13,sprites.builtin.oceanSand11,sprites.builtin.oceanSand8,sprites.builtin.oceanDepths0,sprites.builtin.oceanDepths1,sprites.builtin.oceanDepths2,sprites.builtin.oceanSand4,sprites.builtin.oceanDepths6,myTiles.tile4,myTiles.tile14,myTiles.tile15,myTiles.tile23,sprites.builtin.oceanSand0,sprites.builtin.oceanDepths4,myTiles.tile29,sprites.swamp.swampTile3,myTiles.tile30], TileScale.Sixteen);
            case "level14":
            case "level14":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level15":
            case "level15":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level16":
            case "level16":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level17":
            case "level17":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level_2":
            case "level_2":return tiles.createTilemap(hex`28000f00000000000000000000000000121d0000000000000c0e00000000000000000000000000000000000000000000000000000000000012000000000000171819000000000000000000000000000c0d0e000015000000000000000000000012000000000000020109000000000000000000000000000b100f111110160000000000000000000012000000001f000000000000000000000000000002050505050505090606090000000a00000000001400000000130000000000000000001e1b0000000000000000000000000000000000000000000000000000000012000000000000000002050505090000000000000000000000000000000a000000000000000000001200000000001d00000000000000000000000000000000000000000000000000000000000000000012000000000a0a0a0a00000000000000000000000000000000000000000a00000000000000000000120000000000000000000000000000000000000000001a000000000000000000001b00000000000012000000000000000002090a00000000020107080101010000000000000000000201091d0000001c120000000000000000000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000020600000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000303030303030303030303030303030303030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040404040404`, img`
............2...........................
............2...........................
2...........2......222..................
.2..........2...................22222222
222...2.....2....2......................
.................2........22222.........
......2..........2......................
.................2....2222..............
......2..........2......................
.................2........222....2222222
.........222.....2......................
.................2.............22.......
.................2......................
........................................
........................................
`, [myTiles.transparency16,sprites.builtin.oceanDepths5,sprites.builtin.oceanDepths0,myTiles.tile4,myTiles.tile5,sprites.builtin.oceanDepths1,sprites.builtin.oceanDepths7,sprites.builtin.forestTiles16,sprites.builtin.forestTiles20,sprites.builtin.oceanDepths2,sprites.builtin.oceanDepths3,sprites.builtin.forestTiles9,sprites.builtin.forestTiles5,sprites.builtin.forestTiles6,sprites.builtin.forestTiles7,sprites.builtin.forestTiles11,sprites.builtin.forestTiles10,sprites.builtin.coral5,myTiles.tile6,sprites.builtin.oceanSand4,myTiles.tile8,sprites.swamp.swampTile2,myTiles.tile10,sprites.builtin.coral1,sprites.builtin.forestTiles13,sprites.builtin.forestTiles15,sprites.swamp.swampTile0,myTiles.tile14,myTiles.tile15,myTiles.tile16,myTiles.tile27,myTiles.tile35], TileScale.Sixteen);
            case "level_3":
            case "level_3":return tiles.createTilemap(hex`3c0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000001300000000000000000000000000000000110000000023000000000000000007000000000000000000000000000000000000000013000000000000001b0013000000100f0f0f0f0f0e000013090d0d080808080a0a0a0a0a0a0c00070000000000000000000000000000000000000015140e00000000000007001b00000000000000000007000000000000000000001300001300001300071300000000000000000000000000001514140e1d1d180000101a00001600071c0000151414140e0007000000000000000000090808080808080808070000000000000000000023000000001917171800000700000000070000001600000007000000000007000000000000000000000000000000000000070000000000130000000808080808081d1d1d1e0013070000000019180000000000000700000000000700000000000000000000000000000000000007000000090d0d08080800000000000000000000000007000000000019180000230000070000000000070000000000000b0000000000000000000000000b000000000000000000000000000000000000000007000000000000190808080808070013001300070000000000000000000000000000000000000000090c00000000000000000000000000000013002607000000000000070000000000071300130013070000000000000000000000000000000000002500000013091f1f1f1f0c0000000000000002040305071c0000000000070000000000071300000013070a0a0a0c0000000000000000000000000000240000000000000000000013000000000000201d1d1d1e000000000000070000000000070013001300070000000000000b00000000000000000000000a0c000b00000000000000151414140e00000000000000000000000000070000000000070000130000070000000000000000000000000000000000002121212121212121212121212121211800110000112300000000000000070000000000070000000000070000000000000b0000000000000000000000030303030303030303030303030304040404040404040404040000002207000000000007000000000007000000000000001112000000000000000006010101010101010101010101010101010101010101010101010505050505050505020202020202020202020202050505050505050505050502020202`, img`
............................................................
2...........................................................
2............................2.....2222222...22222222222222.
2...................222......2.2.........2..................
2...............2222222..22..2.2...22222.2.........222222222
2...............2222..2....2...2...2.....2..................
2.........2222222222..2....22......2.....2..................
2...222222............2.....22.....2.....2......2...........
.2....................2......2222222.....2..................
..22..................2......2.....2.....2..................
2....222222.......22222......2.....2.....22222..............
..................22222......2.....2.....2......2...........
22.2.......22222.............2.....2.....2..................
...............2.............2.....2.....2......2...........
2222222222222222222222222....2.....2.....2..................
222222222222222222222222222222222222222222222222222222222222
`, [myTiles.transparency16,myTiles.tile12,sprites.builtin.oceanSand9,sprites.builtin.oceanSand8,sprites.builtin.oceanSand11,sprites.builtin.oceanSand10,myTiles.tile13,myTiles.tile6,sprites.builtin.oceanDepths4,sprites.builtin.oceanDepths0,sprites.builtin.oceanDepths1,sprites.builtin.oceanDepths3,sprites.builtin.oceanDepths2,sprites.builtin.oceanDepths5,sprites.builtin.oceanSand7,sprites.builtin.oceanSand2,sprites.builtin.oceanSand1,myTiles.tile14,myTiles.tile17,myTiles.tile16,sprites.builtin.oceanSand6,sprites.builtin.oceanSand5,myTiles.tile8,myTiles.tile18,myTiles.tile19,myTiles.tile20,sprites.builtin.oceanSand3,sprites.builtin.oceanSand4,myTiles.tile23,myTiles.tile24,myTiles.tile25,sprites.builtin.oceanDepths7,myTiles.tile26,myTiles.tile4,myTiles.tile28,myTiles.tile27,sprites.builtin.forestTiles9,sprites.swamp.swampTile3,myTiles.tile35], TileScale.Sixteen);
            case "level_1":
            case "level6":return tiles.createTilemap(hex`19001900000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000100ac0b0b0b0b05060000100f0000000000000000000000000000000000000000000000100d0000000000000000000015000000000000000000000000100e00000000000000000c0508090000000000000000000000100e000013000000000000000000000000000000000000000010080b0b05080b0b0900000000000000000000000000000000101111111111111111111111111111111111111111111111111112121212121212121212121212121212121212121212121212`, img`
.........................
.........................
.........................
.........................
.........................
222222...................
.........................
.......222...............
.........................
...............22222.....
.........................
........222222...........
.........................
.........................
.........................
.........................
.........................
...............2222222...
.........................
.........................
.........2222............
.........................
22222222.................
.........................
.........................
`, [myTiles.transparency16,sprites.builtin.forestTiles26,sprites.builtin.forestTiles27,sprites.builtin.forestTiles24,sprites.builtin.forestTiles25,sprites.builtin.forestTiles20,sprites.builtin.forestTiles29,sprites.builtin.forestTiles22,sprites.builtin.forestTiles16,sprites.builtin.forestTiles3,sprites.swamp.swampTile3,sprites.builtin.forestTiles2,sprites.builtin.forestTiles21,sprites.builtin.forestTiles5,sprites.builtin.forestTiles9,sprites.swamp.swampTile2,sprites.builtin.forestTiles0,myTiles.tile4,myTiles.tile5,myTiles.tile14,sprites.builtin.oceanDepths5,myTiles.tile16,myTiles.tile35], TileScale.Sixteen);
            case "Amphibious power room":
            case "Amphibious power room1":return tiles.createTilemap(hex`09000b00000000000000000000000000000000000000090909090109090909020505040105040505020205040104040205050205040105040202040402050102040404050402050103050404030202050102050503060607060806070606060606060606060606`, img`
. . . . . . . . . 
2 2 2 2 . 2 2 2 2 
2 2 2 2 . 2 2 2 2 
2 2 2 2 . 2 2 2 2 
2 2 2 2 . 2 2 2 2 
2 2 2 2 . 2 2 2 2 
2 2 2 2 . 2 2 2 2 
2 2 2 2 . 2 2 2 2 
2 2 2 2 . 2 2 2 2 
. . . . . . . . . 
2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.stairNorth,sprites.dungeon.floorDark1,sprites.dungeon.floorDark3,sprites.dungeon.floorDark4,sprites.dungeon.floorDark0,sprites.dungeon.floorLight0,sprites.dungeon.floorLight1,sprites.dungeon.floorLight3,sprites.dungeon.collectibleInsignia], TileScale.Sixteen);
            case "level_5":
            case "level_4":return tiles.createTilemap(hex`12001a0000001100000000110000110000001100000000001000000000100000100000001000000000000f000300020f03000f0003000f0000000a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a010000030000000000000000000000000000000a000a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a090300000000030908080808080809000000090a0a0a0a0a0009080b0808080809000000090300000000030908080808080e090d000009000a0a0a0a0a090a0a0a0a0a090a0a0a03090009000000030000000000000000000000090009000a0a0a0a00000a00000000000000090300030909090000000000000000000000090a0a0a090900000000000000000000000000000000000000000a0a0000000000000000000000000000000000000000000000000a0a0c00000000000000000000000000000a09090000000000000000000000000a0a0a0909090a0a0a0a0a030a0000000000090909090909090909090903090a0000000000000009090909090909090309090a0a0a0000000009090909090000000000090909090a0a0000090909000000000000000000000000000000090909030000000000000000000000000000090909050505050608080808080705050505050505040404040408081208080404040404040404`, img`
..................
..................
..................
222222222222222222
..................
2.2222222222222222
2......2......2...
222222.2......2...
2......2......2...
2.222222222222222.
2.2...............
2.2.2222..2.......
2...222...........
222222............
........22........
................22
...............222
............222222
22222.2.....222222
22222.22.......222
22222.22222....222
22.....222222..222
...............222
...............222
22222.....22222222
22222.....22222222
`, [myTiles.transparency16,myTiles.tile10,myTiles.tile17,myTiles.tile16,myTiles.tile18,sprites.builtin.oceanSand6,sprites.builtin.oceanSand7,sprites.builtin.oceanSand5,myTiles.tile31,myTiles.tile32,myTiles.tile33,myTiles.tile34,myTiles.tile35,myTiles.tile36,myTiles.tile37,myTiles.tile38,myTiles.tile39,myTiles.tile40,myTiles.tile41], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile7":return tile7;
            case "myTile0":
            case "tile9":return tile9;
            case "tile1":return tile1;
            case "tile2":return tile2;
            case "tile3":return tile3;
            case "Deadly water that dont look deadly":
            case "tile4":return tile4;
            case "Death waer 2":
            case "tile5":return tile5;
            case "Aquatic cave pillar":
            case "tile6":return tile6;
            case "Treasure upside down":
            case "tile8":return tile8;
            case "Water lock":
            case "tile10":return tile10;
            case "tile11":return tile11;
            case "Dark burple":
            case "tile12":return tile12;
            case "Dead coral":
            case "tile13":return tile13;
            case "Ocean spike":
            case "tile14":return tile14;
            case "Ocean spike side":
            case "tile15":return tile15;
            case "Enemy basic fish spawn":
            case "tile17":return tile17;
            case "Shell coin tile":
            case "tile16":return tile16;
            case "Aquatic cave pillar center1":
            case "tile18":return tile18;
            case "Aquatic cave pillar right0":
            case "tile19":return tile19;
            case "Aquatic cave pillar left":
            case "tile20":return tile20;
            case "Dead coral non spawn0":
            case "tile21":return tile21;
            case "Dead coral non spawn flipped":
            case "tile22":return tile22;
            case "Ocean spike from left":
            case "tile23":return tile23;
            case "Aquatic cave pillar bottom0":
            case "tile24":return tile24;
            case "Aquatic cave pillar bottom right corner0":
            case "tile25":return tile25;
            case "Aquatic cave pillar bottom left corner":
            case "tile26":return tile26;
            case "Coin galore portal start":
            case "tile28":return tile28;
            case "Nukefish spawn":
            case "tile27":return tile27;
            case "Door to amphibious power":
            case "tile29":return tile29;
            case "Dead coral trigger event":
            case "tile30":return tile30;
            case "Water1":
            case "tile31":return tile31;
            case "Sand0":
            case "tile32":return tile32;
            case "Sand top":
            case "tile33":return tile33;
            case "Key tile":
            case "tile34":return tile34;
            case "Log tile":
            case "tile35":return tile35;
            case "Enter0":
            case "tile36":return tile36;
            case "Exit":
            case "tile37":return tile37;
            case "Tree root":
            case "tile38":return tile38;
            case "Tree trunk":
            case "tile39":return tile39;
            case "Tree leaves":
            case "tile40":return tile40;
            case "Water spawn":
            case "tile41":return tile41;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
